This is the summary of Rposlyn versioning

CS-Script
    cscs.exe            - Roslyn v1.1.0
    CSSCriptLibrary.dll - Roslyn v1.2.0
    
CS-Script.Npp
    execution (cscs.exe)    - Roslyn v1.1.0
    Intellisense.dll        - Roslyn v1.1.0

----------------------------------------
NOTE: There are two very distinctive use-cases of Roslyn integration with CS-Script:

* CS-Script stand alone executables
cscs.exe uses Roslyn compiler platform v1.1.0.51202 binaries for handling C#6.0 syntax. The binaries are hosted by the script engine via CSSCodeProvider.v4.6.dll code provider.
The Roslyn binaries are distributed via downloadable release packages from GitHub or via the latest CS-Script Chocolatey package. These Roslyn binaries are the only Roslyn distro available at the time. 

* CSScriptLibrary class library
It uses Roslyn scripting binaries v1.2.0.51211 (beta) for handling C#6.0 syntax when hosting the script engine. These binaries are not included into CS-Script deployment and only distributed via NuGet packages 'CS-Script' and 'CS-Script.bin'.
These pre-release Roslyn binaries are the only adequate Roslyn distro available at the time. 

The discrepancy in the Roslyn packages is unfortunate but something that has to be tolerated. 
Sadly at the moment MS didn't provide latest distributables for Roslyn.Scripting(v1.2) and Roslyn.Compilers (v1.1) in their compatible versions. 
This is particularly annoying because the both packages depend on the same inheritably incompatible assemblies (Microsoft.CodeAnalysis.dll v1.1 and v1.2) Thus one cannot just merge all Roslyn 1.1 and 1.2 assemblies in the same folder.

31/03/2016
------------------------------------------

Roslyn official v1.2.1 became abailable for btyh Roslyn.Scripting and Roslyn.Compilers fo CS-Script.
Though it is has benefit for CS-Script.Npp as v1.2.1 suprisingly much slower then v1.1.0 at least for 'usings' resolution. The available v2.0.0 is as quick as v1.1.0 but it is stil beta. 

22/04/2016




